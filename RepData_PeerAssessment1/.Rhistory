activity<-read.csv('activity.csv')
View(activity)
---
names(activity)
names(activity)
activity$steps
nrow(activity)
?plot
names(activity)
activity$date
?aggregate
unique(activity2$date)
unique(activity$date)
class(unique(activity$date))
activity2<-activity[!is.na(activity$steps),]
aggregate(x=activity2,by=list(activity2$steps),FUN="sum")
activity2$steps
class(activity2$steps)
aggregate(x=activity2,by=list(activity2$steps),FUN="sum")
aggregate(x=activity2,by=list(activity2$date),FUN="sum")
aggregate(x=activity2,by=list(activity2$date))
aggregate(x=activity2,by=list(activity2$date),FUN = function(x) sum(x$steps))
aggregate(x=activity2,by=list(activity2$date),FUN = function(x) sum(x[,steps]))
aggregate(x=activity2,by=list(activity2$date),FUN = function(x) sum(x[,"steps"]))
library(data.table)
activity2<-as.data.table(activity[!is.na(activity$steps),])
activity2[by=activity2$date]
activity2[by=activity2$date,sum(steps)]
activity2[by=unique(activity2$date)]
activity2[by=activity2$date]
activity2[sum(activity2$steps),by=activity2$date]
activity2[sum(activity2$steps),by=activity2$date]
activity2[,sum(activity2$steps),by=activity2$date]
activity2[,sum(steps),by=activity2$date]
activity2<-activity2[,sum(steps),by=activity2$date]
names(activity2)
plot(activity2$activity2,activity2$V1,type='h')
plot(x=activity2$activity2,y=activity2$V1,type='h')
names(activity2)<-c('date','steps')
names(activity2)
activity2
names(activity2)<-c("date","steps")
activity2
activity2<-as.data.table(activity[!is.na(activity$steps),])
activity2<-activity2[,sum(steps),by=activity2$date]
activity2
median(activity2$V1)
mean(activity2$V1)
activity2<-as.data.table(activity[!is.na(activity$steps),])
activity3<-activity2[,sum(steps),by=activity2$date]
plot(activity3$activity2,activity3$V1,type='h')
split(activity2,activity2$date)
split(activity2$steps,activity2$date)
median(split(activity2$steps,activity2$date))
split(activity2$steps,activity2$date,median)
split(activity2$steps,activity2$date)
activity<-read.csv('activity.csv')
activity2<-aggregate(activity[!is.na(activity$steps),],by=activity$date)
activity2<-aggregate(activity[!is.na(activity$steps),],by=activity$date,FUN=sum(steps))
activity2<-aggregate(activity[!is.na(activity$steps),],by=activity$date,FUN=sum(activity$steps))
activity2<-aggregate(activity[!is.na(activity$steps),],by=activity$date,FUN=sum
)
activity2<-aggregate(activity[!is.na(activity$steps),],by=list(activity$date),FUN=sum)
activity2<-aggregate(activity[!is.na(activity$steps),],by=list(activity$date))
activity2<-aggregate(activity,by=list(date,steps),FUN=sum,na.rm=T)
names(activity)
activity2<-aggregate(activity,by=list(date,steps),FUN=sum,na.rm=T)
activity2<-aggregate(activity,by=list(date,activity$steps),FUN=sum,na.rm=T)
activity2<-aggregate(activity,by=list(activity$date,activity$steps),FUN=sum,na.rm=T)
activity2<-aggregate(activity,by=list(activity$date,activity$steps),na.rm=T)
activity2<-aggregate(activity,by=list(activity$steps),FUN=sum,na.rm=T)
activity2<-by(activity,activity$date,function(x) mean(x$steps))
activity2
by(activity,activity$date,function(x) mean(x$steps))
activity3<-by(activity,activity$date,function(x) sum(x$steps))
names(activity3)
activity3
activity3[1]
activity3[2]
activity3[3]
average
?average
?plot
plot(xl)
data<-fread('activity.csv')
data
library(data.table)
unzip(zipfile="repdata-data-activity.zip")
data<-fread('activity.csv')
data2 <- na.omit(data)
total.steps.by.date<-data2[,sum(steps),by=date]
total.steps.by.date
plot(total.steps.by.date,type='h',xlab='date',ylab='sum')
plot(total.steps.by.date,type='h',xlab='date',ylab='sum')
plot(total.steps.by.date,type='h',xlab='date',ylab='sum')
total.steps.by.date
View(total.steps.by.date)
class(total.steps.by.date$date)
class(total.steps.by.date$V1)
plot(total.steps.by.date,type='h',xlab='date',ylab='sum')
plot(total.steps.by.date,type='h')
plot(total.steps.by.date,type='h',xlab='date',ylab='sum')
class(data$interval)
weekdays('2012-11-04')
weekdays("2012-11-04")
weekdays.Date("2012-11-04")
weekdays(as.POSIXct("2012-11-04"))
data2<-data
set(data2,which(is.na(data2)),1,0)
data2<-data
set(data2,which(is.na(data2)),0)
data2<-data
set(data2,which(is.na(data2)),1,0)
data2<-data
set(data2,which(is.na(data2)),1,0)
discoverTypeDay = function(x)
{
day = weekdays(as.POSIXct(x))
if (day=="domingo" || day=="sabado")
return "weekend"
return "weekday"
}
discoverTypeDay = function(x)
{
day = weekdays(as.POSIXct(x))
if (day=="domingo" || day=="sabado")
return "weekend"
return "weekday"
}
discoverTypeDay = function(x)
{
day = weekdays(as.POSIXct(x))
if (day=="domingo" || day=="sabado")
return("weekend")
return("weekday")
}
discoverTypeDay('2011-11-11')
data2[,"type.day":=discoverTypeDay(date),by=steps][]
data2[,"type.day":=discoverTypeDay(date),by=steps][]
discoverTypeDay = function(x)
{
print(x)
day = weekdays(as.POSIXct(x))
if (day=="domingo" || day=="sabado")
return("weekend")
return("weekday")
}
data2[,"type.day":=discoverTypeDay(date),by=steps][]
data2[,"type.day":=discoverTypeDay(date),by=steps][]
data2[,"type.day":=discoverTypeDay(date),by=steps]
data2$date
is.na(data2$date)
sum(is.na(data2$date))
data2[,"type.day":=discoverTypeDay(date),by=steps]
discoverTypeDay = function(x)
{
type.day<-vector()
for (i in x)
{
day = weekdays(as.POSIXct(x))
if (day=="domingo" || day=="sabado")
type.day<-rbind(type.day,"weekend")
else
type.day<-rbind(type.day,"weekday")
}
return(type.day)
}
data2[,"type.day":=discoverTypeDay(date),by=steps]
data2[,"type.day":=discoverTypeDay(date),by=steps]
discoverTypeDay = function(x)
{
type.day<-vector()
for (i in x)
{
day = weekdays(as.POSIXct(x))
if (day=="domingo" || day=="sabado")
type.day<-rbind(type.day,"weekend")
else
type.day<-rbind(type.day,"weekday")
}
return(type.day)
}
discoverTypeDay = function(x)
{
type.day<-vector()
for (i in x)
{
day = weekdays(as.POSIXct(x))
if (day=="domingo" || day=="sabado")
type.day<-rbind(type.day,"weekend")
else
type.day<-rbind(type.day,"weekday")
}
return(type.day)
}
discoverTypeDay = function(x)
{
type.day<-vector()
for (i in x)
{
day = weekdays(as.POSIXct(i))
if (day=="domingo" || day=="sabado")
type.day<-rbind(type.day,"weekend")
else
type.day<-rbind(type.day,"weekday")
}
return(type.day)
}
data2[,"type.day":=discoverTypeDay(date),by=steps]
discoverTypeDay = function(x)
{
type.day<-vector()
for (d in x)
{
print(d)
day = weekdays(as.POSIXct(d))
if (day=="domingo" || day=="sabado")
type.day<-rbind(type.day,"weekend")
else
type.day<-rbind(type.day,"weekday")
}
return(type.day)
}
data2[,"type.day":=discoverTypeDay(date),by=steps]
weekdays(as.POSIXct('2012-10-21'))
weekdays(as.POSIXct('2012-21-10'))
weekdays(as.POSIXct('2012-10-21'))
weekdays(as.POSIXct('10-21-2012'))
weekdays(as.POSIXct('21-10-2012'))
weekdays(as.POSIXct('2012-10-21'))
as.POSIXlt.character('2012-10-21')
as.POSIXlt('2012-10-21')
as.POSIXct('2012-10-21')
as.POSIXlt('2012-10-21')
as.POSIXlt(date('2012-10-21'))
as.POSIXct(as.character('2012-10-21'))
as.POSIXct(as.character('2012-10-21'))
as.POSIXct('2012-10-21')
discoverTypeDay = function(x)
{
week.days<-c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
week.end<-c("Saturday", "Sunday")
day = weekdays(as.Date(x))
if (day %in% week.days)
return("weekday")
else if (day %in% week.end)
return("weekend")
else
stop("invalid date")
}
data2[,"type.day":=discoverTypeDay(date),by=steps]
as.Date('2012-10-21')
weekdays(as.Date('2012-10-21'))
discoverTypeDay = function(x)
{
week.days<-c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
week.end<-c("Saturday", "Sunday")
day = weekdays(as.Date(x))
if (day %in% week.days)
return("weekday")
else if (day %in% week.end)
return("weekend")
else
stop("invalid date")
}
data2[,"type.day":=discoverTypeDay(date),by=steps]
discoverTypeDay = function(date)
{
week.days<-c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
week.end<-c("Saturday", "Sunday")
for (d in date)
{
day = weekdays(d)
if (day %in% week.days)
return("weekday")
else if (day %in% week.end)
return("weekend")
else
stop("invalid date")
}
}
discoverTypeDay = function(date)
{
week.days<-c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
week.end<-c("Saturday", "Sunday")
type.day <- vector()
for (d in date)
{
day = weekdays(d)
if (day %in% week.days)
type.day<-rbind(type.day,"weekday")
else if (day %in% week.end)
type.day<-rbind(type.day,"weekend")
else
stop("invalid date")
}
return (type.day)
}
data2[,"type.day":=discoverTypeDay(as.Date(date)),by=steps]
discoverTypeDay = function(date)
{
week.days<-c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
week.end<-c("Saturday", "Sunday")
type.day <- vector()
for (d in date)
{
day = weekdays(as.Date(d))
if (day %in% week.days)
type.day<-rbind(type.day,"weekday")
else if (day %in% week.end)
type.day<-rbind(type.day,"weekend")
else
stop("invalid date")
}
return (type.day)
}
data2[,"type.day":=discoverTypeDay(date),by=steps]
discoverTypeDay = function(dates)
{
week.days<-c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
week.end<-c("Saturday", "Sunday")
type.day <- vector()
for (d in dates)
{
print(d)
day = weekdays(as.Date(d))
if (day %in% week.days)
type.day<-rbind(type.day,"weekday")
else if (day %in% week.end)
type.day<-rbind(type.day,"weekend")
else
stop("invalid date")
}
return (type.day)
}
data2[,"type.day":=discoverTypeDay(date),by=steps]
as.Date('2012-10-01')
weekdays(as.Date('2012-10-01'))
?weekdays
weekdays(as.Date('2012-10-02'))
weekdays(as.Date('2012-10-06'))
weekdays(as.Date('2012-10-07'))
as.list(Sys.getenv())
LANGUAGE=en
weekdays(as.Date('2012-10-07'))
Sys.getenv()
weekdays(as.Date('2012-10-07'))
Sys.getenv('HOME')
Sys.getenv('HOME')
Sys.getenv('HOME')
defaults write org.R-project.R force.LANG en_US.UTF-8
Sys.setenv(LANG = "en")
weekdays(as.Date('2012-10-07'))
Sys.setenv(LANG = "en")
weekdays(as.Date('2012-10-07'))
weekdays(as.Date('2012-10-07'))
weekdays(as.Date('2012-10-07'))
weekdays(as.Date('2012-10-07'))
weekdays(as.Date('2012-10-07'))
weekdays(as.Date('2012-10-07'))
weekdays(as.Date('2012-10-07'))
weekdays(as.Date('2012-10-07'))
weekdays(as.Date('2012-10-07'))
